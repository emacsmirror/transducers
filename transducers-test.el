(require 'ert)
(require 'transducers)

(ert-deftest transducers-collecting ()
  (should (equal '() (t/transduce #'t/pass #'t/cons '())))
  (should (equal [] (t/transduce #'t/pass #'t/vector [])))
  (should (equal "hello" (t/transduce #'t/pass #'t/string "hello"))))

(ert-deftest transducers-counting ()
  (should (= 0 (t/transduce #'t/pass #'t/count '())))
  (should (= 3 (t/transduce #'t/pass #'t/count '(1 2 3))))
  (should (= 0 (t/transduce #'t/pass #'t/count [])))
  (should (= 3 (t/transduce #'t/pass #'t/count [1 2 3]))))

(ert-deftest transducers-predicates ()
  (should (not (t/transduce #'t/pass (t/any #'cl-evenp) '(1 3 5 7 9))))
  (should (t/transduce #'t/pass (t/any #'cl-evenp) '(1 3 5 7 9 2)))
  (should (t/transduce #'t/pass (t/all #'cl-oddp) '(1 3 5 7 9)))
  (should (not (t/transduce #'t/pass (t/all #'cl-oddp) '(1 3 5 7 9 2)))))

(ert-deftest transducers-first-last ()
  (should (= 7  (t/transduce (t/filter #'cl-oddp) (t/first 0) '(2 4 6 7 10))))
  (should (= 10 (t/transduce #'t/pass (t/last 0) '(2 4 6 7 10)))))

(ert-deftest transducers-map ()
  (should (equal '() (t/transduce (t/map #'1+) #'t/cons '())))
  (should (equal '(2 3 4) (t/transduce (t/map #'1+) #'t/cons '(1 2 3))))
  (should (equal [2 3 4] (t/transduce (t/map #'1+) #'t/vector '(1 2 3))))
  (should (string-equal "HELLO" (t/transduce (t/map #'upcase) #'t/string "hello"))))

(ert-deftest transducers-zip ()
  (should (equal '(5 7 9)  (t/transduce (t/map #'+) #'t/cons '(1 2 3) '(4 5 6 7))))
  (should (equal '(6 8 10) (t/transduce (t/map #'+) #'t/cons '(1 2 3 4) '(5 6 7))))
  (should (equal [5 7 9]   (t/transduce (t/map #'+) #'t/vector [1 2 3] [4 5 6 7])))
  (should (equal [6 8 10]  (t/transduce (t/map #'+) #'t/vector [1 2 3 4] [5 6 7]))))

(ert-deftest transducers-filter ()
  (should (equal '(2 4) (t/transduce (t/filter #'cl-evenp) #'t/cons '(1 2 3 4 5)))))
  ;; (should (equal '(2 5 8) (t/transduce (t/filter-map #'first) #'t/cons '(() (2 3) () (5 6) () (8 9))))))
  ;; (should (equal '(1 2 3 "abc") (t/transduce #'t:unique #'t/cons '(1 2 1 3 2 1 2 "abc"))))
  ;; (should (equal '(1 2 3 4 3) (t:transduce #'t:dedup #'t:cons '(1 1 1 2 2 2 3 3 3 4 3 3)))))
